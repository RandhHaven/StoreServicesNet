// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StoreServices.Api.Author.Persistence;

namespace StoreServices.Api.Author.Migrations
{
    [DbContext(typeof(ContextAuthor))]
    [Migration("20211202214044_migrationsStoreServiceInitial")]
    partial class migrationsStoreServiceInitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("StoreServices.Api.Author.Models.AcademicDegree", b =>
                {
                    b.Property<long>("AcademicDegreeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AcademicCenter")
                        .HasColumnType("text");

                    b.Property<string>("AcademicDegreeGuid")
                        .HasColumnType("text");

                    b.Property<long?>("BookAuthorID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateDegree")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NameGraduate")
                        .HasColumnType("text");

                    b.HasKey("AcademicDegreeID");

                    b.HasIndex("BookAuthorID");

                    b.ToTable("AcademicDegree");
                });

            modelBuilder.Entity("StoreServices.Api.Author.Models.BookAuthor", b =>
                {
                    b.Property<long?>("BookAuthorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("BookAuthorGuid")
                        .HasColumnType("text");

                    b.Property<string>("LastNameAuthor")
                        .HasColumnType("text");

                    b.Property<string>("NameAuthor")
                        .HasColumnType("text");

                    b.HasKey("BookAuthorID");

                    b.ToTable("BookAuthor");
                });

            modelBuilder.Entity("StoreServices.Api.Author.Models.AcademicDegree", b =>
                {
                    b.HasOne("StoreServices.Api.Author.Models.BookAuthor", "BookAuthor")
                        .WithMany("AcademicDegreeList")
                        .HasForeignKey("BookAuthorID");
                });
#pragma warning restore 612, 618
        }
    }
}
